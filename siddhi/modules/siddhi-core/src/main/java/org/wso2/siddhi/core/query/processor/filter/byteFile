import org.wso2.siddhi.core.event.ComplexEvent;
import org.wso2.siddhi.core.event.stream.StreamEvent;
import org.wso2.siddhi.core.executor.ExpressionExecutor;
import org.wso2.siddhi.core.query.processor.filter.AbstractOptimizedExpressionExecutor;

public class ByteCodeimplements AbstractOptimizedExpressionExecutor{
  public ByteCode() {
  }
  
  public boolean optimizedExecuteWithByteCode(ExpressionExecutor paramExpressionExecutor, ComplexEvent paramComplexEvent)
  {
    boolean bool = false;
    int i = 0;
    StreamEvent localStreamEvent = (StreamEvent)paramComplexEvent;
    Object[] arrayOfObject = localStreamEvent.getBeforeWindowData();
    float f = ((Float)arrayOfObject[0]).floatValue();
    double d = 45.0D;
    bool = f > d;
    if (!bool)
    {
      bool = false;
    }
    else
    {
      localStreamEvent = (StreamEvent)paramComplexEvent;
      arrayOfObject = localStreamEvent.getBeforeWindowData();
      f = ((Float)arrayOfObject[1]).floatValue();
      d = 40.0D;
      bool = f > d;
      if (bool)
      {
        i = 1;
      }
      else
      {
        localStreamEvent = (StreamEvent)paramComplexEvent;
        arrayOfObject = localStreamEvent.getBeforeWindowData();
        f = ((Float)arrayOfObject[2]).floatValue();
        d = 100.0D;
        i = f > d ? 1 : 0;
        if (i != 0) {
          i = 1;
        } else {
          i = 0;
        }
      }
      if (i == 0) {
        bool = false;
      } else {
        bool = true;
      }
    }
    if (!bool)
    {
      bool = false;
    }
    else
    {
      localStreamEvent = (StreamEvent)paramComplexEvent;
      arrayOfObject = localStreamEvent.getBeforeWindowData();
      f = ((Float)arrayOfObject[3]).floatValue();
      d = 10.0D;
      bool = f < d;
      if (bool)
      {
        bool = true;
      }
      else
      {
        localStreamEvent = (StreamEvent)paramComplexEvent;
        arrayOfObject = localStreamEvent.getBeforeWindowData();
        f = ((Float)arrayOfObject[4]).floatValue();
        d = 150.0D;
        i = f > d ? 1 : 0;
        if (i != 0) {
          bool = true;
        } else {
          bool = false;
        }
      }
      i = !bool ? 1 : 0;
      if (i == 0) {
        bool = false;
      } else {
        bool = true;
      }
    }
    return bool;
 }
}